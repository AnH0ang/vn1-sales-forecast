[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "vn1-sales-forecast"
readme = { file = "README.md", content-type = "text/markdown" }
dynamic = ["version"]
requires-python = ">=3.11,<3.12"
dependencies = [
    "altair[all]",
    "kedro-datasets",
    "kedro-viz",
    "kedro==0.19.8",
    "lightgbm",
    "xgboost",
    "pandas",
    "polars[all]",
    "scikit-learn",
    "seaborn",
    "statsforecast",
    "mlforecast",
    "neuralforecast",
    "optuna",
    "optuna-dashboard",
    "numpy",
    "tqdm",
    "tsfeatures",
    "jax",
    "optax",
    "streamlit",
    "watchdog",
]

[tool.rye]
dev-dependencies = [
    "commitizen",
    "ipykernel",
    "pre-commit",
    "pydoclint",
    "pyright",
    "ruff",
    "pytest",
]

[tool.kedro]
package_name = "vn1_sales_forecast"
project_name = "vn1-sales-forecast"
kedro_init_version = "0.19.8"
tools = ["Linting", "Testing", "Data Structure", "Kedro Viz"]
example_pipeline = "False"
source_dir = "src"

[tool.setuptools.dynamic.version]
attr = "vn1_sales_forecast.__version__"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.ruff]
line-length = 100
show-fixes = true
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "RUF", # ruff rules
    "PL",  # pylint
]
ignore = [
    "E501",
    "PLR2004", # Magic value used in comparison
    "PLR0913", # Too many arguments
]
unfixable = [
    "F401", # imported but unused
]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint.isort]
known-first-party = ["vn1_sales_forecast"]
split-on-trailing-comma = false

[tool.typos.default.extend-words]
mape = "mape"
arange = "arange"

[tool.kedro_telemetry]
project_id = "1a6c8efcfad4483899e6116e53f99ad8"
